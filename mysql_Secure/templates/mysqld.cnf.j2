#
# The MySQL database server configuration file.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

[mysqld]
#
# * Basic Settings
#
user		= mysql
# pid-file	= /var/run/mysqld/mysqld.pid
# socket	= /var/run/mysqld/mysqld.sock
# port		= 3306
# datadir	= /var/lib/mysql


# If MySQL is running as a replication slave, this should be
# changed. Ref https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmpdir
# tmpdir		= /tmp
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address		= 0.0.0.0 
mysqlx-bind-address	= 127.0.0.1
#
# * Fine Tuning
#
key_buffer_size		= 16M
# max_allowed_packet	= 64M
# thread_stack		= 256K

# thread_cache_size       = -1

# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
myisam-recover-options  = BACKUP

max_connections        = 150

# table_open_cache       = 4000

#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
#
# Log all queries
# Be aware that this log type is a performance killer.
# general_log_file        = /var/log/mysql/query.log
# general_log             = 1
#
# Error log - should be very few entries.
#
log_error = /var/log/mysql/error.log
#
# Here you can see queries with especially long duration
# slow_query_log		= 1
# slow_query_log_file	= /var/log/mysql/mysql-slow.log
# long_query_time = 2
# log-queries-not-using-indexes
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
# server-id		= 1
# log_bin			= /var/log/mysql/mysql-bin.log
# binlog_expire_logs_seconds	= 2592000
max_binlog_size   = 100M
# binlog_do_db		= include_database_name
# binlog_ignore_db	= include_database_name

#-----------------------------------------------------------------------------------------#
###for password complexity and life time###
#download validate_password.so before run this setting

plugin-load-add=validate_password.so
validate-password=FORCE_PLUS_PERMANENT
validate_password.length=9              #at least 9 character length
validate_password.mixed_case_count=1    #at least 1 mix case (eg: 1 uppercase in password)
validate_password.number_count=1        #at least 1 number character in password
validate_password.special_char_count=1  #at least 1 special character in password
#validate_password_check_user_name=ON   #check if password not contain username
default_password_lifetime=90            #90 day

###avoid dictionary attack
###Any passwords that match entries in this dictionary file will be considered weak 
###and may not meet the password policy requirements
###un comment to use
#validate_password_dictionary_file=<path to dictionary file>


#-----------------------------------------------------------------------------------------#
###Set Delays and Limit Failed Login Attempts to avoid brute-forcing###
###connection_control.so plugin: used to control or restrict client connections to the MySQL server based on various criteria 
###such as IP addresses, user accounts, and more. It provides a way to manage and control access to the database server, 
###which can be helpful for security and access control purposes.

###FORCE_PLUS_PERMANENT: to enforce strict rules regarding failed login attempts, 
###and these rules will remain until you change or remove them from the configuration.

plugin-load-add=connection_control.so
connection-control=FORCE_PLUS_PERMANENT                                      
connection-control-failed-login-attempts=FORCE_PLUS_PERMANENT
connection_control_failed_connections_threshold=5
connection_control_min_connection_delay=60000    #milisecond - ms = 1 minute
connection_control_max_connection_delay=1920000  #32 minutes

#-----------------------------------------------------------------------------------------#
###The local_infile parameter dictates whether files located on the MySQL client's computer 
###can be loaded or selected via LOAD DATA INFILE or SELECT local_file
###should disable
local_infile=OFF

#-----------------------------------------------------------------------------------------#
###disable --skip-grant-tables: This option causes mysqld to start without using the privilege system
###If this option is used, all clients of the affected server will have unrestricted access to all databases.
skip-grant-tables = FALSE

#-----------------------------------------------------------------------------------------#
###skip symbolic link (or commonly known as Symlink): a special type of file used to link individual folders together. 
###The links will point to their actual location.
###Prevents symbolic links from being used for database files. This is especially important
###when MySQL is executing as root as arbitrary files may be overwritten. 
###The symboliclinks option might allow someone to direct actions by the MySQL server to other files and/or directories.
skip-symbolic-links = YES

#-----------------------------------------------------------------------------------------#
###The log_error_verbosity system variable, set to 2 by default, specifies the verbosity of
###events sent to the MySQL error log. A value of 2 enables logging of error and warning
###messages, a value of 3 also includes informational logging, a value of 1 logs only errors
log_error_verbosity = 2

#-----------------------------------------------------------------------------------------#
###The log-raw MySQL option determines whether passwords are rewritten by the server
###so as not to appear in log files as plain text. If log-raw is enabled, then passwords are
###written to the various log files (general query log, slow query log, and binary log) in plain text.
log-raw = OFF

#-----------------------------------------------------------------------------------------#
###0 - authenticate with the mysql_native_password plugin
###1 - authenticate with the mysql_old_password plugin
###2 - authenticate with the sha256_password plugin
###When old_passwords is set to 1 the PASSWORD() function will create password hashes
###with a very weak hashing algorithm which might be easy to break if captured by an attacker.  MySQL pre-4.1 password hashing algorithm
#old_passwords = 0  ##checking before implementing

###This option dictates whether the server will deny connections by clients that attempt to
###use accounts that have their password stored in the mysql_old_password format
secure_auth=ON

#-----------------------------------------------------------------------------------------#
###SSL certificate
#replace path of ssl cert 

ssl_ca=ca.pem
ssl_cert=server-cert.pem
ssl_key=server-key.pem
require_secure_transport=ON

ssl-ca = /etc/mysql/ca-cert.pem
ssl-cert = /etc/mysql/server-cert.pem
ssl-key = /etc/mysql/server-key.pem

#-----------------------------------------------------------------------------------------#
###The password which the client uses is stored in the MASTER info repository, which by
###default is a plaintext file. The TABLE MASTER info repository is a bit safer, but with
###filesystem access it's still possible to gain access to the password the SLAVE is using
master_info_repository = TABLE