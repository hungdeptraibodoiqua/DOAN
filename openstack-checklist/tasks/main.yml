---
# tasks file for openstack-security-checklist
##identity service checklist
- name: check version
  ansible.builtin.command:
    openstack --version
  register: openstack_version

- name: show output
  ansible.builtin.debug:
    var: openstack_version

##check keystone path and permission if exists   
##config keystone
- name: add max_request_body_size
  ansible.builtin.blockinfile:
    path: "{{ keystone_config_dest }}"
    block: |
      [oslo_middleware]
      max_request_body_size = 114688
  become: true

- name: set insecure_debug = false
  ansible.builtin.lineinfile:
    path: "{{ keystone_config_dest }}"
    line: insecure_debug = false
    insertafter: '^\[DEFAULT\]'
  become: true

- name: disable admin_token  from the [default] section
  community.general.ini_file:
    path: "{{ keystone_config_dest }}"
    section: DEFAULT
    option: admin_token
    state: absent
  become: true

- name: disable admin_token  from the [default] section
  community.general.ini_file:
    path: "{{ keystone_config_dest }}"
    section: DEFAULT
    option: insecure_debug
    state: absent
  become: true
    
- name: set provider token = fernet
  ansible.builtin.lineinfile:
    path: "{{ keystone_config_dest }}"
    regexp: "provider"
    line: provider = fernet
  become: true 
  
- name: set permission for keystone directory
  ansible.builtin.file:
    path: "{{ keystone_path }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true
  when: keystone_path.stat.exists

##check horizon path and permission if exists /etc/openstack-dashboard/local_settings.py
- name: config horizon dashboard 
  ansible.builtin.template:
    src: "{{ horizon_src }}"
    dest: "{{ horizon_dest }}"
  become: true

- name: set permission for horizon directory
  ansible.builtin.file:
    path: "{{ horizon_dest }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true

##nova compute service
- name: config nova 
  ansible.builtin.template:
    src: "{{ nova_src }}"
    dest: "{{ nova_dest }}"
  become: true

- name: set permission for nova directory
  ansible.builtin.file:
    path: "{{ nova_path }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true

##block storage cinder
- name: config cinder 
  ansible.builtin.template:
    src: "{{ cinder_src }}"
    dest: "{{ cinder_dest }}"
    mode: 0640
  become: true

- name: set permission for nova directory
  ansible.builtin.file:
    path: "{{ cinder_path }}"
    owner: "{{ openstack_file_owner }}"
    group: "{{ openstack_file_group }}"
    mode: 0640
    recurse: true
  become: true
  
##network service neutron 
- name: config neutron
  ansible.builtin.template:
    src: "{{ neutron_src }}"
    dest: "{{ neutron_dest }}"
  become: true
  
- name: set permission for neutron directory
  ansible.builtin.file:
    path: "{{ neutron_path }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true

#config SSL for web 
- name: create new folder for SSL
  ansible.builtin.file:
    path: /home/control/SSL
    state: directory
    mode: 0644
  become: true

- name: copy SSL cert
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /home/control/SSL 
  with_fileglob: 
    - "{{ SSL_cert_path }}/*"
  become: true

- name: config SSL
  ansible.builtin.template:
    src: "{{ dashboard_conf }}"
    dest: "{{ dashboard_conf_location }}"
    force: true
    mode: 0644
  become: true
