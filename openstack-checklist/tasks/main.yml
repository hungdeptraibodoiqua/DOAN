---
# tasks file for openstack-security-checklist
- name: check version
  ansible.builtin.command:
    openstack --version
  register: openstack_version

- name: show output
  ansible.builtin.debug:
    var: openstack_version.stdout_lines

##config keystone
- name: add max_request_body_size
  ansible.builtin.blockinfile:
    path: "{{ keystone_config_dest }}"
    block: |
      [oslo_middleware]
      max_request_body_size = 114688
  become: true

- name: set insecure_debug = false
  ansible.builtin.lineinfile:
    path: "{{ keystone_config_dest }}"
    line: insecure_debug = false
    insertafter: '^\[DEFAULT\]'
  become: true

- name: disable admin_token  from the [default] section
  community.general.ini_file:
    path: "{{ keystone_config_dest }}"
    section: DEFAULT
    option: admin_token
    state: absent
  become: true

- name: set security_compliance
  ansible.builtin.blockinfile:
    path: "{{ keystone_config_dest }}"
    block: |
      [security_compliance]
       lockout_failure_attempts = 6 
       lockout_duration = 1800
       disable_user_account_days_inactive = 90
       password_expires_days = 90
       unique_last_password_count= 5
       password_regex = ^(?=.*\d)(?=.*[a-zA-Z]).{7,}$
  become: true

- name: set provider token = fernet
  ansible.builtin.lineinfile:
    path: "{{ keystone_config_dest }}"
    regexp: "provider"
    line: provider = fernet
  become: true
  notify: restart-apache2 
  
- name: set permission for keystone directory
  ansible.builtin.file:
    path: "{{ keystone_path }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true

##config horizon 
- name: config horizon dashboard 
  ansible.builtin.template:
    src: "{{ horizon_src }}"
    dest: "{{ horizon_dest }}"
  become: true
  notify: restart-apache2

- name: set api_insecure
  ansible.builtin.blockinfile:
    path: "{{ keystone_config_dest }}"
    block: |
      [glance]
      api_insecure = false
  become: true

- name: set permission for horizon directory
  ansible.builtin.file:
    path: "{{ horizon_dest }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true

##config nova compute service
- name: set auth_strategy to nova
  ansible.builtin.lineinfile:
    path: "{{ nova_dest }}"
    line: auth_strategy = keystone
    insertafter: '^\[DEFAULT\]'
  become: true

- name: set auth_strategy to nova
  ansible.builtin.blockinfile:
    path: "{{ nova_dest }}"
    block: |
      [api]
      auth_strategy = keystone
  become: true

- name: set permission for nova directory
  ansible.builtin.file:
    path: "{{ nova_path }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true

##config block storage cinder
- name: set auth_strategy 
  ansible.builtin.lineinfile:
    path: "{{ cinder_dest }}"
    line: auth_strategy = keystone
    insertafter: '^\[DEFAULT\]'
  become: true

- name: set osapi_max_request_body_size
  ansible.builtin.lineinfile:
    path: "{{ cinder_dest }}"
    line: osapi_max_request_body_size = 114688
    insertafter: '^\[DEFAULT\]'
  become: true

- name: set nas_secure_file_permissions
  ansible.builtin.lineinfile:
    path: "{{ cinder_dest }}"
    line: onas_secure_file_permissions = auto
    insertafter: '^\[DEFAULT\]'
  become: true

- name: set glance_api_insecure 
  ansible.builtin.lineinfile:
    path: "{{ cinder_dest }}"
    line: glance_api_insecure = false
    insertafter: '^\[DEFAULT\]'
  become: true

- name: set permission for nova directory
  ansible.builtin.file:
    path: "{{ cinder_path }}"
    owner: root 
    group: root
    mode: 0640
    recurse: true
  become: true
  
##network service neutron 
- name: use ssl for neutron
  ansible.builtin.lineinfile:
    path: "{{ neutron_dest }}"
    line: use_ssl = true
    insertafter: '^\[DEFAULT\]'
  become: true
  
- name: set auth_strategy 
  ansible.builtin.lineinfile:
    path: "{{ neutron_dest }}"
    line: auth_strategy = keystone 
    insertafter: '^\[DEFAULT\]'
  become: true

- name: set permission for neutron directory
  ansible.builtin.file:
    path: "{{ neutron_path }}"
    owner: root
    group: root
    mode: 0640
    recurse: true
  become: true

# #config SSL for web 
# - name: create new folder for SSL
#   ansible.builtin.file:
#     path: /home/control/SSL
#     state: directory
#     mode: 0644
#   become: true

# - name: enable ssl mod apache 
#   ansible.builtin.command: a2enmod ssl 
#   become: true

# - name: copy SSL cert
#   ansible.builtin.copy:
#     src: "{{ item }}"
#     dest: /home/control/SSL 
#   with_fileglob: 
#     - "{{ SSL_cert_path }}/*"
#   become: true

# - name: config SSL
#   ansible.builtin.template:
#     src: "{{ dashboard_conf }}"
#     dest: "{{ dashboard_conf_apache }}"
#     force: true
#     mode: 0644
#   become: true
